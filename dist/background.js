/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : 0);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./src/background/background.ts":
/*!**************************************!*\
  !*** ./src/background/background.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"./src/background/common.ts\");\n/* harmony import */ var _modules_overlay_background__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/overlay/background */ \"./src/modules/overlay/background.ts\");\n/* harmony import */ var _modules_network_background__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/network/background */ \"./src/modules/network/background.ts\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2dyb3VuZC9iYWNrZ3JvdW5kLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnAtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9iYWNrZ3JvdW5kL2JhY2tncm91bmQudHM/NzJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vY29tbW9uJztcbmltcG9ydCAnLi4vbW9kdWxlcy9vdmVybGF5L2JhY2tncm91bmQnO1xuaW1wb3J0ICcuLi9tb2R1bGVzL25ldHdvcmsvYmFja2dyb3VuZCc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/background/background.ts\n");

/***/ }),

/***/ "./src/background/common.ts":
/*!**********************************!*\
  !*** ./src/background/common.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.ts\");\n // chrome.tabs.onUpdated.addListener((tab) => {\n//     console.log('create tab', tab.id)\n//     sendTabMessage(tab.id!, [tab.id!]);\n// });\n\n(0,_utils__WEBPACK_IMPORTED_MODULE_0__.onRuntimeMessage)('tabInfo', (data, sender, response) => {\n  var _sender$tab;\n\n  response((_sender$tab = sender.tab) === null || _sender$tab === void 0 ? void 0 : _sender$tab.id);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2dyb3VuZC9jb21tb24udHMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUFBOztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucC1jaHJvbWUtZXh0ZW5zaW9uLy4vc3JjL2JhY2tncm91bmQvY29tbW9uLnRzP2Q1NGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb25SdW50aW1lTWVzc2FnZSwgc2VuZFRhYk1lc3NhZ2UgfSBmcm9tICcuLi91dGlscyc7XG4vLyBjaHJvbWUudGFicy5vblVwZGF0ZWQuYWRkTGlzdGVuZXIoKHRhYikgPT4ge1xuLy8gICAgIGNvbnNvbGUubG9nKCdjcmVhdGUgdGFiJywgdGFiLmlkKVxuLy8gICAgIHNlbmRUYWJNZXNzYWdlKHRhYi5pZCEsIFt0YWIuaWQhXSk7XG4vLyB9KTtcbm9uUnVudGltZU1lc3NhZ2UoJ3RhYkluZm8nLCAoZGF0YSwgc2VuZGVyLCByZXNwb25zZSkgPT4ge1xuICAgIHJlc3BvbnNlKHNlbmRlci50YWI/LmlkKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/background/common.ts\n");

/***/ }),

/***/ "./src/modules/network/apiRule.ts":
/*!****************************************!*\
  !*** ./src/modules/network/apiRule.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"networkLifeCycle\": () => (/* binding */ networkLifeCycle),\n/* harmony export */   \"networkRuleHandler\": () => (/* binding */ networkRuleHandler)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils */ \"./src/utils/index.ts\");\n\nconst networkLifeCycle = ['response'];\nconst storageKey = 'networkRules';\n\nclass NetworkRuleHandler {\n  enable = false;\n\n  async refresh() {\n    const {\n      enable,\n      rules\n    } = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getLocalStorage)(storageKey, {\n      enable: false,\n      rules: {}\n    });\n    this.allRules = rules;\n    this.enable = enable;\n  }\n\n  async allNetworkRules() {\n    if (!this.allRules) {\n      await this.refresh();\n    }\n\n    return this.allRules;\n  }\n\n  setEnable(bool) {\n    this.enable = bool;\n    this.save();\n  }\n\n  async getNetworkRule(url) {\n    var _this$allRules;\n\n    let checkEnable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    await this.allNetworkRules();\n    const rule = (_this$allRules = this.allRules) === null || _this$allRules === void 0 ? void 0 : _this$allRules[url];\n\n    if (rule && checkEnable) {\n      if (Object.keys(rule.rules).length === 0) {\n        return undefined;\n      }\n\n      if (Object.values(rule.rules).every(requestRule => {\n        const isEmpty = networkLifeCycle.every(life => {\n          var _requestRule$life, _requestRule$life2;\n\n          return !((_requestRule$life = requestRule[life]) !== null && _requestRule$life !== void 0 && _requestRule$life.enable) || !((_requestRule$life2 = requestRule[life]) !== null && _requestRule$life2 !== void 0 && _requestRule$life2.handlerFunctionScript.trim());\n        });\n        return isEmpty;\n      })) {\n        return undefined;\n      }\n    }\n\n    return rule;\n  }\n\n  async ensureRule(url) {\n    await this.allNetworkRules();\n    let rule = await this.getNetworkRule(url);\n\n    if (!rule) {\n      rule = {\n        url,\n        rules: {}\n      };\n      this.allRules[url] = rule;\n    }\n\n    return rule;\n  }\n\n  getRequestUrlKey(requestUrl, baseUrl) {\n    const parsedUrlObject = new URL(requestUrl, baseUrl);\n    return `${parsedUrlObject.origin}${parsedUrlObject.pathname}`;\n  }\n\n  async configRuleRequest(url, requestUrl, requestRule, state) {\n    const rule = await this.ensureRule(url);\n    const parsedUrl = this.getRequestUrlKey(requestUrl, url);\n    rule.rules[parsedUrl] = rule.rules[parsedUrl] ?? {\n      url: requestUrl\n    };\n    const requestUrlRule = rule.rules[parsedUrl];\n    requestUrlRule[state] = requestUrlRule[state] ?? {\n      enable: true,\n      handlerFunctionScript: ''\n    };\n    Object.assign(requestUrlRule[state], requestRule);\n    this.save();\n  }\n\n  async save() {\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.setLocalStorage)(storageKey, {\n      enable: this.enable,\n      rules: this.allRules ?? {}\n    });\n  }\n\n  async forceSave(rules) {\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.setLocalStorage)(storageKey, {\n      enable: this.enable,\n      rules: JSON.parse(rules) ?? {}\n    });\n  }\n\n}\n\nconst networkRuleHandler = new NetworkRuleHandler();\n(0,_utils__WEBPACK_IMPORTED_MODULE_0__.registerStorage)(storageKey, {\n  onExport: async () => {\n    const data = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getLocalStorage)(storageKey, {\n      enable: false,\n      rules: {}\n    });\n    return data;\n  },\n  onImport: async data => {\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.setLocalStorage)(storageKey, data);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9uZXR3b3JrL2FwaVJ1bGUudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBOztBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQUE7O0FBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFsRUE7O0FBb0VBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnAtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9tb2R1bGVzL25ldHdvcmsvYXBpUnVsZS50cz9mMjA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRUYWIsIGdldExvY2FsU3RvcmFnZSwgcmVnaXN0ZXJTdG9yYWdlLCBzZXRMb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi8uLi91dGlscyc7XG5leHBvcnQgY29uc3QgbmV0d29ya0xpZmVDeWNsZSA9IFsncmVzcG9uc2UnXTtcbmNvbnN0IHN0b3JhZ2VLZXkgPSAnbmV0d29ya1J1bGVzJztcbmNsYXNzIE5ldHdvcmtSdWxlSGFuZGxlciB7XG4gICAgYWxsUnVsZXM7XG4gICAgZW5hYmxlID0gZmFsc2U7XG4gICAgYXN5bmMgcmVmcmVzaCgpIHtcbiAgICAgICAgY29uc3QgeyBlbmFibGUsIHJ1bGVzIH0gPSBhd2FpdCBnZXRMb2NhbFN0b3JhZ2Uoc3RvcmFnZUtleSwgeyBlbmFibGU6IGZhbHNlLCBydWxlczoge30gfSk7XG4gICAgICAgIHRoaXMuYWxsUnVsZXMgPSBydWxlcztcbiAgICAgICAgdGhpcy5lbmFibGUgPSBlbmFibGU7XG4gICAgfVxuICAgIGFzeW5jIGFsbE5ldHdvcmtSdWxlcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmFsbFJ1bGVzKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnJlZnJlc2goKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5hbGxSdWxlcztcbiAgICB9XG4gICAgc2V0RW5hYmxlKGJvb2wpIHtcbiAgICAgICAgdGhpcy5lbmFibGUgPSBib29sO1xuICAgICAgICB0aGlzLnNhdmUoKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0TmV0d29ya1J1bGUodXJsLCBjaGVja0VuYWJsZSA9IGZhbHNlKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuYWxsTmV0d29ya1J1bGVzKCk7XG4gICAgICAgIGNvbnN0IHJ1bGUgPSB0aGlzLmFsbFJ1bGVzPy5bdXJsXTtcbiAgICAgICAgaWYgKHJ1bGUgJiYgY2hlY2tFbmFibGUpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhydWxlLnJ1bGVzKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMocnVsZS5ydWxlcykuZXZlcnkoKHJlcXVlc3RSdWxlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaXNFbXB0eSA9IG5ldHdvcmtMaWZlQ3ljbGUuZXZlcnkoKGxpZmUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFyZXF1ZXN0UnVsZVtsaWZlXT8uZW5hYmxlIHx8ICFyZXF1ZXN0UnVsZVtsaWZlXT8uaGFuZGxlckZ1bmN0aW9uU2NyaXB0LnRyaW0oKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNFbXB0eTtcbiAgICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcnVsZTtcbiAgICB9XG4gICAgYXN5bmMgZW5zdXJlUnVsZSh1cmwpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5hbGxOZXR3b3JrUnVsZXMoKTtcbiAgICAgICAgbGV0IHJ1bGUgPSBhd2FpdCB0aGlzLmdldE5ldHdvcmtSdWxlKHVybCk7XG4gICAgICAgIGlmICghcnVsZSkge1xuICAgICAgICAgICAgcnVsZSA9IHtcbiAgICAgICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICAgICAgcnVsZXM6IHt9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuYWxsUnVsZXNbdXJsXSA9IHJ1bGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgfVxuICAgIGdldFJlcXVlc3RVcmxLZXkocmVxdWVzdFVybCwgYmFzZVVybCkge1xuICAgICAgICBjb25zdCBwYXJzZWRVcmxPYmplY3QgPSBuZXcgVVJMKHJlcXVlc3RVcmwsIGJhc2VVcmwpO1xuICAgICAgICByZXR1cm4gYCR7cGFyc2VkVXJsT2JqZWN0Lm9yaWdpbn0ke3BhcnNlZFVybE9iamVjdC5wYXRobmFtZX1gO1xuICAgIH1cbiAgICBhc3luYyBjb25maWdSdWxlUmVxdWVzdCh1cmwsIHJlcXVlc3RVcmwsIHJlcXVlc3RSdWxlLCBzdGF0ZSkge1xuICAgICAgICBjb25zdCBydWxlID0gYXdhaXQgdGhpcy5lbnN1cmVSdWxlKHVybCk7XG4gICAgICAgIGNvbnN0IHBhcnNlZFVybCA9IHRoaXMuZ2V0UmVxdWVzdFVybEtleShyZXF1ZXN0VXJsLCB1cmwpO1xuICAgICAgICBydWxlLnJ1bGVzW3BhcnNlZFVybF0gPSBydWxlLnJ1bGVzW3BhcnNlZFVybF0gPz8geyB1cmw6IHJlcXVlc3RVcmwgfTtcbiAgICAgICAgY29uc3QgcmVxdWVzdFVybFJ1bGUgPSBydWxlLnJ1bGVzW3BhcnNlZFVybF07XG4gICAgICAgIHJlcXVlc3RVcmxSdWxlW3N0YXRlXSA9IHJlcXVlc3RVcmxSdWxlW3N0YXRlXSA/PyB7IGVuYWJsZTogdHJ1ZSwgaGFuZGxlckZ1bmN0aW9uU2NyaXB0OiAnJyB9O1xuICAgICAgICBPYmplY3QuYXNzaWduKHJlcXVlc3RVcmxSdWxlW3N0YXRlXSwgcmVxdWVzdFJ1bGUpO1xuICAgICAgICB0aGlzLnNhdmUoKTtcbiAgICB9XG4gICAgYXN5bmMgc2F2ZSgpIHtcbiAgICAgICAgYXdhaXQgc2V0TG9jYWxTdG9yYWdlKHN0b3JhZ2VLZXksIHsgZW5hYmxlOiB0aGlzLmVuYWJsZSwgcnVsZXM6IHRoaXMuYWxsUnVsZXMgPz8ge30gfSk7XG4gICAgfVxuICAgIGFzeW5jIGZvcmNlU2F2ZShydWxlcykge1xuICAgICAgICBhd2FpdCBzZXRMb2NhbFN0b3JhZ2Uoc3RvcmFnZUtleSwgeyBlbmFibGU6IHRoaXMuZW5hYmxlLCBydWxlczogSlNPTi5wYXJzZShydWxlcykgPz8ge30gfSk7XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IG5ldHdvcmtSdWxlSGFuZGxlciA9IG5ldyBOZXR3b3JrUnVsZUhhbmRsZXIoKTtcbnJlZ2lzdGVyU3RvcmFnZShzdG9yYWdlS2V5LCB7XG4gICAgb25FeHBvcnQ6IGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGdldExvY2FsU3RvcmFnZShzdG9yYWdlS2V5LCB7IGVuYWJsZTogZmFsc2UsIHJ1bGVzOiB7fSB9KTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSxcbiAgICBvbkltcG9ydDogYXN5bmMgKGRhdGEpID0+IHtcbiAgICAgICAgYXdhaXQgc2V0TG9jYWxTdG9yYWdlKHN0b3JhZ2VLZXksIGRhdGEpO1xuICAgIH0sXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/network/apiRule.ts\n");

/***/ }),

/***/ "./src/modules/network/background.ts":
/*!*******************************************!*\
  !*** ./src/modules/network/background.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _apiRule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiRule */ \"./src/modules/network/apiRule.ts\");\n\n\nconst watchingMap = new Set();\n\nfunction getUrlRule(rule, requestUrl) {\n  var _rule$rules$checkKey, _rule$rules$checkKey$, _rule$rules$checkKey2;\n\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'response';\n  const checkKey = requestUrl.split('?')[0]; // if(checkKey.includes('/detail')){debugger}\n\n  if (!(rule !== null && rule !== void 0 && (_rule$rules$checkKey = rule.rules[checkKey]) !== null && _rule$rules$checkKey !== void 0 && (_rule$rules$checkKey$ = _rule$rules$checkKey[state]) !== null && _rule$rules$checkKey$ !== void 0 && _rule$rules$checkKey$.enable)) {\n    return undefined;\n  }\n\n  return (_rule$rules$checkKey2 = rule.rules[checkKey]) === null || _rule$rules$checkKey2 === void 0 ? void 0 : _rule$rules$checkKey2[state];\n}\n\nfunction hasJSONHeader(headers) {\n  return headers.some(header => header.name.toLowerCase() === 'content-type' && header.value.includes('application/json'));\n}\n\nasync function replaceResponse(requestParams, protoResponse, script) {\n  const isResponseJSON = hasJSONHeader(requestParams.responseHeaders);\n  const request = requestParams.request;\n  const response = {\n    code: requestParams.responseStatusCode,\n    body: protoResponse.base64Encoded ? atob(protoResponse.body) : protoResponse.body,\n    headers: requestParams.responseHeaders\n  };\n\n  if (isResponseJSON) {\n    try {\n      response.body = JSON.parse(response.body);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  (0,_utils__WEBPACK_IMPORTED_MODULE_0__.evalScript)(script, {\n    request,\n    response\n  });\n\n  if (isResponseJSON) {\n    response.body = JSON.stringify(response.body);\n  }\n\n  if (protoResponse.base64Encoded && typeof response.body === 'string') {\n    response.body = btoa(response.body);\n  }\n\n  return response;\n}\n\nlet currentDebuggee = undefined;\nlet currentDebugTab = undefined;\nlet currentRules = undefined;\n\nasync function hijackRequest(url, scriptRule, params) {\n  chrome.debugger.sendCommand(currentDebuggee, 'Fetch.getResponseBody', {\n    requestId: params.requestId\n  }, async function (protoResponse) {\n    const response = await replaceResponse(params, protoResponse, scriptRule.handlerFunctionScript);\n    chrome.debugger.sendCommand(currentDebuggee, 'Fetch.fulfillRequest', {\n      requestId: params.requestId,\n      responseCode: response.code,\n      responseHeaders: response.headers,\n      body: response.body\n    }, () => {\n      console.log(`Request ${url} intercepted and modified.`);\n    });\n  });\n}\n\nasync function hijackRule(tab) {\n  chrome.debugger.getTargets(targets => {\n    const target = targets.find(t => t.tabId === tab.id);\n\n    if (!target) {\n      console.warn('no target found');\n      return;\n    }\n\n    currentDebuggee = {\n      targetId: target.id\n    };\n    currentDebugTab = tab.id;\n    chrome.debugger.attach(currentDebuggee, '1.2', () => {\n      chrome.debugger.sendCommand(currentDebuggee, 'Network.enable', {});\n      chrome.debugger.sendCommand(currentDebuggee, 'Fetch.enable', {\n        patterns: [{\n          requestStage: 'Response'\n        }]\n      }, () => {\n        chrome.debugger.onEvent.addListener((source, method, params) => {\n          if (source.targetId === target.id && method === 'Fetch.requestPaused') {\n            const requestParam = params;\n            const requestId = requestParam.requestId;\n            const url = requestParam.request.url;\n            const requestRule = getUrlRule(currentRules, url, 'response');\n\n            if (!requestRule) {\n              chrome.debugger.sendCommand(currentDebuggee, 'Fetch.continueRequest', {\n                requestId\n              });\n              return;\n            }\n\n            hijackRequest(url, requestRule, requestParam);\n          } // else {\n          //     chrome.debugger.sendCommand({ tabId: tabId }, 'Fetch.continueRequest', {\n          //         requestId: params.requestId,\n          //     });\n          // }\n\n        });\n      });\n    });\n  });\n}\n\nfunction detachDebug() {\n  if (currentDebuggee) {\n    chrome.debugger.detach(currentDebuggee);\n  }\n\n  currentDebuggee = undefined;\n  watchingMap.delete(currentDebugTab);\n  currentDebugTab = undefined;\n}\n\nasync function updateHttpWatcher(tab) {\n  _apiRule__WEBPACK_IMPORTED_MODULE_1__.networkRuleHandler.refresh();\n\n  if (!_apiRule__WEBPACK_IMPORTED_MODULE_1__.networkRuleHandler.enable) {\n    detachDebug();\n    return;\n  }\n\n  if (!tab.url || !tab.id) {\n    return;\n  }\n\n  let rules = await _apiRule__WEBPACK_IMPORTED_MODULE_1__.networkRuleHandler.getNetworkRule(tab.url, true);\n  console.log('network rules', tab.id, tab.url, rules);\n\n  if (!rules) {\n    if (currentDebugTab === tab.id) {\n      detachDebug();\n    }\n\n    return;\n  }\n\n  currentRules = rules;\n\n  if (watchingMap.has(tab.id)) {\n    return;\n  }\n\n  watchingMap.add(tab.id);\n  hijackRule(tab);\n}\n\nconst debounceUpdateHttpWatcher = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.debounce)(updateHttpWatcher, 500); // https://developer.chrome.com/docs/extensions/reference/webRequest/\n\nchrome.tabs.onCreated.addListener(tab => {\n  debounceUpdateHttpWatcher(tab);\n});\nchrome.tabs.onUpdated.addListener(async tabId => {\n  const tab = await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getTab)(tabId);\n  debounceUpdateHttpWatcher(tab);\n});\nchrome.tabs.onRemoved.addListener(async tabId => {\n  if (tabId === currentDebugTab) {\n    detachDebug();\n  }\n});\n_apiRule__WEBPACK_IMPORTED_MODULE_1__.networkRuleHandler.refresh();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/network/background.ts\n");

/***/ }),

/***/ "./src/modules/overlay/background.ts":
/*!*******************************************!*\
  !*** ./src/modules/overlay/background.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils */ \"./src/utils/index.ts\");\n // 存内存。关浏览器丢\n\nconst overlayMap = new Map();\nconsole.log('capture background ready', overlayMap);\n(0,_utils__WEBPACK_IMPORTED_MODULE_0__.onRuntimeMessage)('setOverlayCapture', (data, sender, response) => {\n  let [currentTabId, captureData] = data; // console.log('setOverlayCapture', currentTabId);\n  // 空的base64是 data:,\n\n  if (!(captureData !== null && captureData !== void 0 && captureData.base64) || captureData.base64.length < 10) {\n    overlayMap.delete(currentTabId);\n  } else {\n    overlayMap.set(currentTabId, captureData);\n    response();\n  } // console.log('sendTabMessage updateOverlayCapture', currentTabId, overlayMap.get(currentTabId));\n\n\n  if (new URL(sender.origin ?? '').protocol === 'chrome-extension:') {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.sendTabMessage)('updateOverlayCapture', currentTabId, [overlayMap.get(currentTabId)]);\n  }\n});\n(0,_utils__WEBPACK_IMPORTED_MODULE_0__.onRuntimeMessage)('getOverlayCapture', (data, sender, response) => {\n  let [currentTabId] = data;\n  const captureData = overlayMap.get(currentTabId);\n  response(captureData);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9vdmVybGF5L2JhY2tncm91bmQudHMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnAtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9tb2R1bGVzL292ZXJsYXkvYmFja2dyb3VuZC50cz9hZTZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9uUnVudGltZU1lc3NhZ2UsIHNlbmRUYWJNZXNzYWdlIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuLy8g5a2Y5YaF5a2Y44CC5YWz5rWP6KeI5Zmo5LiiXG5jb25zdCBvdmVybGF5TWFwID0gbmV3IE1hcCgpO1xuY29uc29sZS5sb2coJ2NhcHR1cmUgYmFja2dyb3VuZCByZWFkeScsIG92ZXJsYXlNYXApO1xub25SdW50aW1lTWVzc2FnZSgnc2V0T3ZlcmxheUNhcHR1cmUnLCAoZGF0YSwgc2VuZGVyLCByZXNwb25zZSkgPT4ge1xuICAgIGxldCBbY3VycmVudFRhYklkLCBjYXB0dXJlRGF0YV0gPSBkYXRhO1xuICAgIC8vIGNvbnNvbGUubG9nKCdzZXRPdmVybGF5Q2FwdHVyZScsIGN1cnJlbnRUYWJJZCk7XG4gICAgLy8g56m655qEYmFzZTY05pivIGRhdGE6LFxuICAgIGlmICghY2FwdHVyZURhdGE/LmJhc2U2NCB8fCBjYXB0dXJlRGF0YS5iYXNlNjQubGVuZ3RoIDwgMTApIHtcbiAgICAgICAgb3ZlcmxheU1hcC5kZWxldGUoY3VycmVudFRhYklkKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG92ZXJsYXlNYXAuc2V0KGN1cnJlbnRUYWJJZCwgY2FwdHVyZURhdGEpO1xuICAgICAgICByZXNwb25zZSgpO1xuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygnc2VuZFRhYk1lc3NhZ2UgdXBkYXRlT3ZlcmxheUNhcHR1cmUnLCBjdXJyZW50VGFiSWQsIG92ZXJsYXlNYXAuZ2V0KGN1cnJlbnRUYWJJZCkpO1xuICAgIGlmIChuZXcgVVJMKHNlbmRlci5vcmlnaW4gPz8gJycpLnByb3RvY29sID09PSAnY2hyb21lLWV4dGVuc2lvbjonKSB7XG4gICAgICAgIHNlbmRUYWJNZXNzYWdlKCd1cGRhdGVPdmVybGF5Q2FwdHVyZScsIGN1cnJlbnRUYWJJZCwgW292ZXJsYXlNYXAuZ2V0KGN1cnJlbnRUYWJJZCldKTtcbiAgICB9XG59KTtcbm9uUnVudGltZU1lc3NhZ2UoJ2dldE92ZXJsYXlDYXB0dXJlJywgKGRhdGEsIHNlbmRlciwgcmVzcG9uc2UpID0+IHtcbiAgICBsZXQgW2N1cnJlbnRUYWJJZF0gPSBkYXRhO1xuICAgIGNvbnN0IGNhcHR1cmVEYXRhID0gb3ZlcmxheU1hcC5nZXQoY3VycmVudFRhYklkKTtcbiAgICByZXNwb25zZShjYXB0dXJlRGF0YSk7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/overlay/background.ts\n");

/***/ }),

/***/ "./src/utils/dragger.ts":
/*!******************************!*\
  !*** ./src/utils/dragger.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bindDragger\": () => (/* binding */ bindDragger)\n/* harmony export */ });\nfunction bindDragger(node, startXGetter, startYGetter, onUpdate) {\n  let dragging = false;\n  let startX = 0;\n  let startY = 0;\n  let offsetX = 0;\n  let offsetY = 0;\n  node.draggable = false;\n  node.addEventListener('mousedown', e => {\n    if (!node) {\n      return;\n    }\n\n    dragging = true;\n    startX = startXGetter();\n    startY = startYGetter();\n    offsetX = e.pageX;\n    offsetY = e.pageY;\n  });\n  window.addEventListener('mousemove', e => {\n    if (!node) {\n      return;\n    }\n\n    if (!dragging) {\n      return;\n    }\n\n    onUpdate(e.pageX - offsetX + startX, e.pageY - offsetY + startY);\n  });\n  window.addEventListener('mouseup', e => {\n    if (!node) {\n      return;\n    }\n\n    if (!dragging) {\n      return;\n    }\n\n    dragging = false;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvZHJhZ2dlci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucC1jaHJvbWUtZXh0ZW5zaW9uLy4vc3JjL3V0aWxzL2RyYWdnZXIudHM/YjgwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gYmluZERyYWdnZXIobm9kZSwgc3RhcnRYR2V0dGVyLCBzdGFydFlHZXR0ZXIsIG9uVXBkYXRlKSB7XG4gICAgbGV0IGRyYWdnaW5nID0gZmFsc2U7XG4gICAgbGV0IHN0YXJ0WCA9IDA7XG4gICAgbGV0IHN0YXJ0WSA9IDA7XG4gICAgbGV0IG9mZnNldFggPSAwO1xuICAgIGxldCBvZmZzZXRZID0gMDtcbiAgICBub2RlLmRyYWdnYWJsZSA9IGZhbHNlO1xuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGUpID0+IHtcbiAgICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICBzdGFydFggPSBzdGFydFhHZXR0ZXIoKTtcbiAgICAgICAgc3RhcnRZID0gc3RhcnRZR2V0dGVyKCk7XG4gICAgICAgIG9mZnNldFggPSBlLnBhZ2VYO1xuICAgICAgICBvZmZzZXRZID0gZS5wYWdlWTtcbiAgICB9KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgKGUpID0+IHtcbiAgICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG9uVXBkYXRlKGUucGFnZVggLSBvZmZzZXRYICsgc3RhcnRYLCBlLnBhZ2VZIC0gb2Zmc2V0WSArIHN0YXJ0WSk7XG4gICAgfSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCAoZSkgPT4ge1xuICAgICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWRyYWdnaW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZHJhZ2dpbmcgPSBmYWxzZTtcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/dragger.ts\n");

/***/ }),

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$\": () => (/* binding */ $),\n/* harmony export */   \"arrayGroupBy\": () => (/* binding */ arrayGroupBy),\n/* harmony export */   \"bindDragger\": () => (/* reexport safe */ _dragger__WEBPACK_IMPORTED_MODULE_1__.bindDragger),\n/* harmony export */   \"debounce\": () => (/* binding */ debounce),\n/* harmony export */   \"download\": () => (/* binding */ download),\n/* harmony export */   \"evalScript\": () => (/* binding */ evalScript),\n/* harmony export */   \"getAllTabs\": () => (/* binding */ getAllTabs),\n/* harmony export */   \"getCurrentTab\": () => (/* binding */ getCurrentTab),\n/* harmony export */   \"getLocalStorage\": () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_2__.getLocalStorage),\n/* harmony export */   \"getSelected\": () => (/* binding */ getSelected),\n/* harmony export */   \"getStorageExportData\": () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_2__.getStorageExportData),\n/* harmony export */   \"getTab\": () => (/* binding */ getTab),\n/* harmony export */   \"insertTemplate\": () => (/* binding */ insertTemplate),\n/* harmony export */   \"loadImage\": () => (/* binding */ loadImage),\n/* harmony export */   \"onRuntimeMessage\": () => (/* reexport safe */ _message__WEBPACK_IMPORTED_MODULE_0__.onRuntimeMessage),\n/* harmony export */   \"popupMaxHeight\": () => (/* binding */ popupMaxHeight),\n/* harmony export */   \"popupMaxWidth\": () => (/* binding */ popupMaxWidth),\n/* harmony export */   \"popupMinWidth\": () => (/* binding */ popupMinWidth),\n/* harmony export */   \"readFile\": () => (/* binding */ readFile),\n/* harmony export */   \"registerStorage\": () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_2__.registerStorage),\n/* harmony export */   \"sendRuntimeMessage\": () => (/* reexport safe */ _message__WEBPACK_IMPORTED_MODULE_0__.sendRuntimeMessage),\n/* harmony export */   \"sendTabMessage\": () => (/* reexport safe */ _message__WEBPACK_IMPORTED_MODULE_0__.sendTabMessage),\n/* harmony export */   \"setBodySize\": () => (/* binding */ setBodySize),\n/* harmony export */   \"setLocalStorage\": () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_2__.setLocalStorage),\n/* harmony export */   \"setStorageImportData\": () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_2__.setStorageImportData),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep)\n/* harmony export */ });\n/* harmony import */ var _message__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./message */ \"./src/utils/message.ts\");\n/* harmony import */ var _dragger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dragger */ \"./src/utils/dragger.ts\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./storage */ \"./src/utils/storage.ts\");\n\n\n\nfunction evalScript(script) {\n  let varObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const varNames = [];\n  const varData = [];\n  Object.entries(varObj).forEach(_ref => {\n    let [name, data] = _ref;\n    varNames.push(name);\n    varData.push(data);\n  });\n  return new Function(...varNames, `\"use strict\";${script}`)(...varData);\n}\nfunction $(selector) {\n  return document.querySelector(selector);\n}\nfunction debounce(fn) {\n  let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n  let timer = undefined;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timer);\n    timer = window.setTimeout(() => fn(...args), delay);\n  };\n}\nfunction sleep() {\n  let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(res => {\n    setTimeout(res, n);\n  });\n}\nasync function loadImage(src) {\n  return new Promise((res, rej) => {\n    const img = new Image();\n\n    img.onload = () => {\n      res(img);\n    };\n\n    img.onerror = rej;\n    img.src = src;\n  });\n}\nfunction arrayGroupBy(array, condition) {\n  const map = new Map();\n  array.forEach(item => {\n    const value = condition(item);\n\n    if (!map.has(value)) {\n      map.set(value, []);\n    }\n\n    map.get(value).push(item);\n  });\n  return [...map.values()];\n}\nfunction insertTemplate(template) {\n  return $('#main').insertAdjacentHTML('beforeend', template);\n}\nconst popupMaxWidth = 500;\nconst popupMaxHeight = 600;\nconst popupMinWidth = 200;\nfunction setBodySize(maxWidth, maxHeight) {\n  $('#main').style.width = `${maxWidth ? popupMaxWidth : popupMinWidth}px`;\n\n  if (typeof maxHeight === 'boolean') {\n    $('#main').style.height = maxHeight ? `${popupMaxHeight}px` : '';\n  }\n} // message =====================================================\n// export function sendToContent(message: string, callback: CommonCallback) {\n//     chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n//         chrome.tabs.sendMessage(tabs[0]!.id!, message, function (response) {\n//             if (callback) callback(response);\n//         });\n//     });\n// }\n// export function contentOnMessage(callback: CommonCallback) {\n//     chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n//         if (sender.tab) {\n//             return;\n//         }\n//         callback && callback(request);\n//     });\n// }\n// export async function loadScript(src: string) {\n//     return new Promise((res, rej) => {\n//         const s = document.createElement('script');\n//         s.src = src;\n//         s.onload = res;\n//         s.onerror = rej;\n//         document.body.appendChild(s);\n//     });\n// }\n// tabs =====================================================\n\nasync function getSelected() {\n  return new Promise(res => {\n    chrome.tabs.getSelected(function (tab) {\n      res(tab);\n    });\n  });\n}\nasync function getCurrentTab() {\n  return chrome.tabs.getCurrent();\n}\nasync function getTab(tabId) {\n  return new Promise((res, rej) => {\n    chrome.tabs.get(tabId, tab => {\n      res(tab);\n    });\n  });\n}\nasync function getAllTabs() {\n  return new Promise(res => {\n    chrome.tabs.query({}, tabs => {\n      res(tabs);\n    });\n  });\n}\nfunction download(fileName, url) {\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = fileName;\n  a.click();\n}\nasync function readFile(file) {\n  return new Promise((res, rej) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file);\n\n    fileReader.onload = function () {\n      const fileContent = fileReader.result;\n      res(fileContent);\n    };\n\n    fileReader.onerror = rej;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25wLWNocm9tZS1leHRlbnNpb24vLi9zcmMvdXRpbHMvaW5kZXgudHM/ZDI1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL21lc3NhZ2UnO1xuZXhwb3J0ICogZnJvbSAnLi9kcmFnZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4vc3RvcmFnZSc7XG5leHBvcnQgZnVuY3Rpb24gZXZhbFNjcmlwdChzY3JpcHQsIHZhck9iaiA9IHt9KSB7XG4gICAgY29uc3QgdmFyTmFtZXMgPSBbXTtcbiAgICBjb25zdCB2YXJEYXRhID0gW107XG4gICAgT2JqZWN0LmVudHJpZXModmFyT2JqKS5mb3JFYWNoKChbbmFtZSwgZGF0YV0pID0+IHtcbiAgICAgICAgdmFyTmFtZXMucHVzaChuYW1lKTtcbiAgICAgICAgdmFyRGF0YS5wdXNoKGRhdGEpO1xuICAgIH0pO1xuICAgIHJldHVybiBuZXcgRnVuY3Rpb24oLi4udmFyTmFtZXMsIGBcInVzZSBzdHJpY3RcIjske3NjcmlwdH1gKSguLi52YXJEYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiAkKHNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlYm91bmNlKGZuLCBkZWxheSA9IDMwMCkge1xuICAgIGxldCB0aW1lciA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgdGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiBmbiguLi5hcmdzKSwgZGVsYXkpO1xuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2xlZXAobiA9IDApIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcykgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KHJlcywgbik7XG4gICAgfSk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZEltYWdlKHNyYykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICByZXMoaW1nKTtcbiAgICAgICAgfTtcbiAgICAgICAgaW1nLm9uZXJyb3IgPSByZWo7XG4gICAgICAgIGltZy5zcmMgPSBzcmM7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYXJyYXlHcm91cEJ5KGFycmF5LCBjb25kaXRpb24pIHtcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwKCk7XG4gICAgYXJyYXkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGNvbmRpdGlvbihpdGVtKTtcbiAgICAgICAgaWYgKCFtYXAuaGFzKHZhbHVlKSkge1xuICAgICAgICAgICAgbWFwLnNldCh2YWx1ZSwgW10pO1xuICAgICAgICB9XG4gICAgICAgIG1hcC5nZXQodmFsdWUpLnB1c2goaXRlbSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIFsuLi5tYXAudmFsdWVzKCldO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGluc2VydFRlbXBsYXRlKHRlbXBsYXRlKSB7XG4gICAgcmV0dXJuICQoJyNtYWluJykuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCB0ZW1wbGF0ZSk7XG59XG5leHBvcnQgY29uc3QgcG9wdXBNYXhXaWR0aCA9IDUwMDtcbmV4cG9ydCBjb25zdCBwb3B1cE1heEhlaWdodCA9IDYwMDtcbmV4cG9ydCBjb25zdCBwb3B1cE1pbldpZHRoID0gMjAwO1xuZXhwb3J0IGZ1bmN0aW9uIHNldEJvZHlTaXplKG1heFdpZHRoLCBtYXhIZWlnaHQpIHtcbiAgICAkKCcjbWFpbicpLnN0eWxlLndpZHRoID0gYCR7bWF4V2lkdGggPyBwb3B1cE1heFdpZHRoIDogcG9wdXBNaW5XaWR0aH1weGA7XG4gICAgaWYgKHR5cGVvZiBtYXhIZWlnaHQgPT09ICdib29sZWFuJykge1xuICAgICAgICAkKCcjbWFpbicpLnN0eWxlLmhlaWdodCA9IG1heEhlaWdodCA/IGAke3BvcHVwTWF4SGVpZ2h0fXB4YCA6ICcnO1xuICAgIH1cbn1cbi8vIG1lc3NhZ2UgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIGV4cG9ydCBmdW5jdGlvbiBzZW5kVG9Db250ZW50KG1lc3NhZ2U6IHN0cmluZywgY2FsbGJhY2s6IENvbW1vbkNhbGxiYWNrKSB7XG4vLyAgICAgY2hyb21lLnRhYnMucXVlcnkoeyBhY3RpdmU6IHRydWUsIGN1cnJlbnRXaW5kb3c6IHRydWUgfSwgZnVuY3Rpb24gKHRhYnMpIHtcbi8vICAgICAgICAgY2hyb21lLnRhYnMuc2VuZE1lc3NhZ2UodGFic1swXSEuaWQhLCBtZXNzYWdlLCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbi8vICAgICAgICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2socmVzcG9uc2UpO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vIH1cbi8vIGV4cG9ydCBmdW5jdGlvbiBjb250ZW50T25NZXNzYWdlKGNhbGxiYWNrOiBDb21tb25DYWxsYmFjaykge1xuLy8gICAgIGNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihmdW5jdGlvbiAocmVxdWVzdCwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpIHtcbi8vICAgICAgICAgaWYgKHNlbmRlci50YWIpIHtcbi8vICAgICAgICAgICAgIHJldHVybjtcbi8vICAgICAgICAgfVxuLy8gICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXF1ZXN0KTtcbi8vICAgICB9KTtcbi8vIH1cbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkU2NyaXB0KHNyYzogc3RyaW5nKSB7XG4vLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuLy8gICAgICAgICBjb25zdCBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4vLyAgICAgICAgIHMuc3JjID0gc3JjO1xuLy8gICAgICAgICBzLm9ubG9hZCA9IHJlcztcbi8vICAgICAgICAgcy5vbmVycm9yID0gcmVqO1xuLy8gICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHMpO1xuLy8gICAgIH0pO1xuLy8gfVxuLy8gdGFicyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlbGVjdGVkKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzKSA9PiB7XG4gICAgICAgIGNocm9tZS50YWJzLmdldFNlbGVjdGVkKGZ1bmN0aW9uICh0YWIpIHtcbiAgICAgICAgICAgIHJlcyh0YWIpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDdXJyZW50VGFiKCkge1xuICAgIHJldHVybiBjaHJvbWUudGFicy5nZXRDdXJyZW50KCk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VGFiKHRhYklkKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICBjaHJvbWUudGFicy5nZXQodGFiSWQsICh0YWIpID0+IHtcbiAgICAgICAgICAgIHJlcyh0YWIpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxUYWJzKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzKSA9PiB7XG4gICAgICAgIGNocm9tZS50YWJzLnF1ZXJ5KHt9LCAodGFicykgPT4ge1xuICAgICAgICAgICAgcmVzKHRhYnMpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkb3dubG9hZChmaWxlTmFtZSwgdXJsKSB7XG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBhLmhyZWYgPSB1cmw7XG4gICAgYS5kb3dubG9hZCA9IGZpbGVOYW1lO1xuICAgIGEuY2xpY2soKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWFkRmlsZShmaWxlKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICBjb25zdCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNUZXh0KGZpbGUpO1xuICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpbGVDb250ZW50ID0gZmlsZVJlYWRlci5yZXN1bHQ7XG4gICAgICAgICAgICByZXMoZmlsZUNvbnRlbnQpO1xuICAgICAgICB9O1xuICAgICAgICBmaWxlUmVhZGVyLm9uZXJyb3IgPSByZWo7XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/index.ts\n");

/***/ }),

/***/ "./src/utils/message.ts":
/*!******************************!*\
  !*** ./src/utils/message.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onRuntimeMessage\": () => (/* binding */ onRuntimeMessage),\n/* harmony export */   \"sendRuntimeMessage\": () => (/* binding */ sendRuntimeMessage),\n/* harmony export */   \"sendTabMessage\": () => (/* binding */ sendTabMessage)\n/* harmony export */ });\nfunction onRuntimeMessage(channel, callback) {\n  chrome.runtime.onMessage.addListener(function (request, sender, response) {\n    if (request.channel !== channel) {\n      return true;\n    }\n\n    setTimeout(() => {\n      callback(request.data, sender, response);\n    }, 1);\n    return true;\n  });\n}\nasync function sendRuntimeMessage(channel, data, onResponse) {\n  return new Promise(res => {\n    if (onResponse) {\n      chrome.runtime.sendMessage({\n        channel,\n        data\n      }, data => {\n        onResponse(data);\n        res(data);\n      });\n    } else {\n      chrome.runtime.sendMessage({\n        channel,\n        data\n      });\n    }\n  });\n}\nfunction sendTabMessage(channel, tabId, data) {\n  return chrome.tabs.sendMessage(tabId, {\n    channel,\n    data\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbWVzc2FnZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25wLWNocm9tZS1leHRlbnNpb24vLi9zcmMvdXRpbHMvbWVzc2FnZS50cz9lZThiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBvblJ1bnRpbWVNZXNzYWdlKGNoYW5uZWwsIGNhbGxiYWNrKSB7XG4gICAgY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKGZ1bmN0aW9uIChyZXF1ZXN0LCBzZW5kZXIsIHJlc3BvbnNlKSB7XG4gICAgICAgIGlmIChyZXF1ZXN0LmNoYW5uZWwgIT09IGNoYW5uZWwpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY2FsbGJhY2socmVxdWVzdC5kYXRhLCBzZW5kZXIsIHJlc3BvbnNlKTtcbiAgICAgICAgfSwgMSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbmRSdW50aW1lTWVzc2FnZShjaGFubmVsLCBkYXRhLCBvblJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMpID0+IHtcbiAgICAgICAgaWYgKG9uUmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHsgY2hhbm5lbCwgZGF0YSB9LCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIG9uUmVzcG9uc2UoZGF0YSk7XG4gICAgICAgICAgICAgICAgcmVzKGRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7IGNoYW5uZWwsIGRhdGEgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZW5kVGFiTWVzc2FnZShjaGFubmVsLCB0YWJJZCwgZGF0YSkge1xuICAgIHJldHVybiBjaHJvbWUudGFicy5zZW5kTWVzc2FnZSh0YWJJZCwgeyBjaGFubmVsLCBkYXRhIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/message.ts\n");

/***/ }),

/***/ "./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLocalStorage\": () => (/* binding */ getLocalStorage),\n/* harmony export */   \"getStorageExportData\": () => (/* binding */ getStorageExportData),\n/* harmony export */   \"registerStorage\": () => (/* binding */ registerStorage),\n/* harmony export */   \"setLocalStorage\": () => (/* binding */ setLocalStorage),\n/* harmony export */   \"setStorageImportData\": () => (/* binding */ setStorageImportData)\n/* harmony export */ });\n// storage =============\nfunction getLocalStorage(name, defaultValue) {\n  return new Promise(res => {\n    chrome.storage.local.get(name, rs => res((rs === null || rs === void 0 ? void 0 : rs[name]) ?? defaultValue));\n  });\n}\nasync function setLocalStorage(name, value) {\n  await chrome.storage.local.set({\n    [name]: value\n  });\n}\nconst storageHandlerStore = new Map();\nfunction registerStorage(key, handler) {\n  storageHandlerStore.set(key, handler);\n  console.log(`[storage] register module: ${key}`);\n}\nasync function getStorageExportData() {\n  const data = {};\n\n  for (let [key, handler] of storageHandlerStore) {\n    if (handler) {\n      data[key] = await handler.onExport();\n    }\n  }\n\n  return JSON.stringify(data, null, 4);\n}\nasync function setStorageImportData(data) {\n  const dataObject = JSON.parse(data);\n\n  for (let [key, handler] of storageHandlerStore) {\n    const importData = dataObject[key];\n\n    if (importData) {\n      await (handler === null || handler === void 0 ? void 0 : handler.onImport(importData));\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvc3RvcmFnZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25wLWNocm9tZS1leHRlbnNpb24vLi9zcmMvdXRpbHMvc3RvcmFnZS50cz9iN2M3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0b3JhZ2UgPT09PT09PT09PT09PVxuZXhwb3J0IGZ1bmN0aW9uIGdldExvY2FsU3RvcmFnZShuYW1lLCBkZWZhdWx0VmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcykgPT4ge1xuICAgICAgICBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQobmFtZSwgKHJzKSA9PiByZXMocnM/LltuYW1lXSA/PyBkZWZhdWx0VmFsdWUpKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRMb2NhbFN0b3JhZ2UobmFtZSwgdmFsdWUpIHtcbiAgICBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoeyBbbmFtZV06IHZhbHVlIH0pO1xufVxuY29uc3Qgc3RvcmFnZUhhbmRsZXJTdG9yZSA9IG5ldyBNYXAoKTtcbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclN0b3JhZ2Uoa2V5LCBoYW5kbGVyKSB7XG4gICAgc3RvcmFnZUhhbmRsZXJTdG9yZS5zZXQoa2V5LCBoYW5kbGVyKTtcbiAgICBjb25zb2xlLmxvZyhgW3N0b3JhZ2VdIHJlZ2lzdGVyIG1vZHVsZTogJHtrZXl9YCk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RvcmFnZUV4cG9ydERhdGEoKSB7XG4gICAgY29uc3QgZGF0YSA9IHt9O1xuICAgIGZvciAobGV0IFtrZXksIGhhbmRsZXJdIG9mIHN0b3JhZ2VIYW5kbGVyU3RvcmUpIHtcbiAgICAgICAgaWYgKGhhbmRsZXIpIHtcbiAgICAgICAgICAgIGRhdGFba2V5XSA9IGF3YWl0IGhhbmRsZXIub25FeHBvcnQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgNCk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0U3RvcmFnZUltcG9ydERhdGEoZGF0YSkge1xuICAgIGNvbnN0IGRhdGFPYmplY3QgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgIGZvciAobGV0IFtrZXksIGhhbmRsZXJdIG9mIHN0b3JhZ2VIYW5kbGVyU3RvcmUpIHtcbiAgICAgICAgY29uc3QgaW1wb3J0RGF0YSA9IGRhdGFPYmplY3Rba2V5XTtcbiAgICAgICAgaWYgKGltcG9ydERhdGEpIHtcbiAgICAgICAgICAgIGF3YWl0IGhhbmRsZXI/Lm9uSW1wb3J0KGltcG9ydERhdGEpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/storage.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./node_modules/regenerator-runtime/runtime.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/background/background.ts");
/******/ 	
/******/ })()
;